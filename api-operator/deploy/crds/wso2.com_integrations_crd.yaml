apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: integrations.wso2.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.readiness
    name: Status
    type: string
  - JSONPath: .status.serviceName
    name: Service-Name
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: wso2.com
  names:
    kind: Integration
    listKind: IntegrationList
    plural: integrations
    singular: integration
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Integration is the Schema for the integrations API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: IntegrationSpec defines the desired state of Integration
          properties:
            autoScale:
              description: Auto scale spec
              properties:
                enabled:
                  description: Defines if auto scaling needs to be enabled Default
                    value "<empty>".
                  type: string
                maxReplicas:
                  description: Defines maximum number of replicas of the Integration
                    deployment Default value "<empty>".
                  format: int32
                  type: integer
              type: object
            deploySpec:
              description: Specification related to deployment
              properties:
                cpuLimit:
                  description: CPU limit of containers in the pod Default value "<empty>".
                  type: string
                memoryLimit:
                  description: Memory limit of containers in the pod Default value
                    "<empty>".
                  type: string
                minReplicas:
                  description: Initial minimum number of replicas in Integration Default
                    value "<empty>".
                  format: int32
                  type: integer
                reqMemory:
                  description: Memory request of containers in the pod Default value
                    "<empty>".
                  type: string
                requestCPU:
                  description: Cpu request of containers in the pod Default value
                    "<empty>".
                  type: string
              type: object
            env:
              description: List of environment variables to set for the integration.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,
                          status.podIPs.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            type: string
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
            envFrom:
              description: List of environment variable references set for the integration.
              items:
                description: EnvFromSource represents the source of a set of ConfigMaps
                properties:
                  configMapRef:
                    description: The ConfigMap to select from
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the ConfigMap must be defined
                        type: boolean
                    type: object
                  prefix:
                    description: An optional identifier to prepend to each key in
                      the ConfigMap. Must be a C_IDENTIFIER.
                    type: string
                  secretRef:
                    description: The Secret to select from
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret must be defined
                        type: boolean
                    type: object
                type: object
              type: array
            expose:
              description: Ports to expose
              properties:
                inboundPorts:
                  description: InboundPorts any traffic serving port that needs to
                    be exposed
                  items:
                    format: int32
                    type: integer
                  type: array
                passthroPort:
                  description: PassthroPort HTTP/HTTPs traffic serving ports
                  format: int32
                  type: integer
              type: object
            image:
              description: Docker image consist of micro integrator runtime and synapse
                configs
              type: string
            imagePullSecret:
              description: Docker image credentials if the Image is in private registry
              type: string
          required:
          - image
          type: object
        status:
          description: IntegrationStatus defines the observed state of Integration
          properties:
            readiness:
              description: Status of the Integration deployment
              type: string
            serviceName:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
                Name of the created service in the Integration deployment'
              type: string
          required:
          - readiness
          - serviceName
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
